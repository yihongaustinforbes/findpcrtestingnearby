{"ast":null,"code":"import _classCallCheck from \"/Users/sunny/development/bubbleteaGoogleMap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sunny/development/bubbleteaGoogleMap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sunny/development/bubbleteaGoogleMap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sunny/development/bubbleteaGoogleMap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sunny/development/bubbleteaGoogleMap/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"/Users/sunny/development/bubbleteaGoogleMap/src/components/ClinicMap/ClinicMap.js\",\n    _this = this;\n\nimport React from 'react';\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow, Polyline } from \"react-google-maps\";\nimport { compose, withProps } from \"recompose\";\nvar MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyB3P3RbY7UksatT5DcJgFvYlciUsUtM1zw\",\n  loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }),\n  containerElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 23\n    }\n  }),\n  mapElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  })\n}), withScriptjs, withGoogleMap)(function (props) {\n  return /*#__PURE__*/React.createElement(GoogleMap, {\n    defaultZoom: 8,\n    defaultCenter: {\n      lat: 35.689487,\n      lng: 139.691711\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }\n  }, props.marker && /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, \"aaaaaaaaa\"));\n});\n\nvar ClinicMap = /*#__PURE__*/function (_React$Component) {\n  _inherits(ClinicMap, _React$Component);\n\n  function ClinicMap(props) {\n    var _this2;\n\n    _classCallCheck(this, ClinicMap);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ClinicMap).call(this, props));\n    _this2.state = {\n      counter: 0\n    }; // this.myFunction = this.myFunction.bind(this);\n\n    return _this2;\n  }\n\n  _createClass(ClinicMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"100vw\",\n          height: \"100vh\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(MyMapComponent, {\n        marker: props.marker,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 1\n        }\n      })));\n    }\n  }]);\n\n  return ClinicMap;\n}(React.Component);\n\nexport { ClinicMap as default };","map":{"version":3,"sources":["/Users/sunny/development/bubbleteaGoogleMap/src/components/ClinicMap/ClinicMap.js"],"names":["React","withGoogleMap","withScriptjs","GoogleMap","Marker","InfoWindow","Polyline","compose","withProps","MyMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","props","lat","lng","marker","ClinicMap","state","counter","width","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,aADJ,EAEIC,YAFJ,EAGIC,SAHJ,EAIIC,MAJJ,EAKIC,UALJ,EAMIC,QANJ,QAOS,mBAPT;AAQA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AAEA,IAAMC,cAAc,GAAGF,OAAO,CAC5BC,SAAS,CAAC;AACRE,EAAAA,YAAY,EAAE,+HADN;AAERC,EAAAA,cAAc,eAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR;AAGRC,EAAAA,gBAAgB,eAAE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHV;AAIRE,EAAAA,UAAU,eAAE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,CAAD,CADmB,EAO5BV,YAP4B,EAQ5BD,aAR4B,CAAP,CASrB,UAACc,KAAD;AAAA,sBACA,oBAAC,SAAD;AACE,IAAA,WAAW,EAAE,CADf;AAEE,IAAA,aAAa,EAAE;AAAEC,MAAAA,GAAG,EAAE,SAAP;AAAkBC,MAAAA,GAAG,EAAE;AAAvB,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGF,KAAK,CAACG,MAAN,iBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJlB,CADA;AAAA,CATqB,CAAvB;;IAgCqBC,S;;;AAEnB,qBAAYJ,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,WAAKK,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb,CAFiB,CAKjB;;AALiB;AAMlB;;;;wCACmB,CAEnB;;;6BACK;AACN,0BACA,uDAyBF;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,OAAT;AAAkBV,UAAAA,MAAM,EAAE;AAA1B,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAEG,KAAK,CAACG,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAzBE,CADA;AA2CD;;;;EAxDsClB,KAAK,CAACuB,S;;SAAxBJ,S","sourcesContent":["import React from 'react';\nimport {\n    withGoogleMap,\n    withScriptjs,\n    GoogleMap,\n    Marker,\n    InfoWindow,\n    Polyline\n  } from \"react-google-maps\";\nimport { compose, withProps } from \"recompose\";\n\nconst MyMapComponent = compose(\n  withProps({\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyB3P3RbY7UksatT5DcJgFvYlciUsUtM1zw\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `100%` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n  }),\n  withScriptjs,\n  withGoogleMap\n)((props) =>\n  <GoogleMap\n    defaultZoom={8}\n    defaultCenter={{ lat: 35.689487, lng: 139.691711 }}\n  >\n    {props.marker &&<div>aaaaaaaaa</div>}\n         {/* {props.marker && <Marker \n        key={props.marker.properties.PARK_ID}\n        position={{\n          lat: props.marker.geometry.coordinates[0],\n          lng: props.marker.geometry.coordinates[1]\n        }}\n        onClick={(e) => {\n        \n        }}\n        icon={{\n          url: `/bubbletea.svg`\n          // scaledSize: new window.google.maps.Size(50, 50)\n        }}\n        />} */}\n  </GoogleMap>\n)\n\nexport default class ClinicMap extends React.Component{\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      counter: 0\n    }\n    // this.myFunction = this.myFunction.bind(this);\n  }\n  componentDidMount() {\n\n  }\nrender(){\n  return(\n  <>\n    \n{/* \n    \n     {showInfo && (\n     <InfoWindow\n        onCloseClick={() => {\n          setShowInfo(false);\n        }}\n        position={{\n          lat: closestGongcha.geometry.coordinates[0],\n          lng: closestGongcha.geometry.coordinates[1]\n        }}\n      >\n        <div>\n          <h2>{closestGongcha.properties.NAME}</h2>\n          <p>density :{closestGongcha.properties.DENSITY}</p>\n          <p>popularity :{closestGongcha.properties.POPULARITY}</p>\n          <p>demographic :{closestGongcha.properties.DEMOGRAPHIC}</p>\n        </div>\n      </InfoWindow>\n   )}  */}\n     \n\n  \n<div style={{ width: \"100vw\", height: \"100vh\" }}>\n<MyMapComponent marker={props.marker}\n     \n      />\n</div>\n\n    {/* <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <MapWrapped\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=\n        AIzaSyB3P3RbY7UksatT5DcJgFvYlciUsUtM1zw`}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `100%` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n      />\n    </div> */}\n    </>\n  );\n}\n\n}\n"]},"metadata":{},"sourceType":"module"}