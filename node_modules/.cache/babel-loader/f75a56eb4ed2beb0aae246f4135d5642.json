{"ast":null,"code":"import _classCallCheck from \"/Users/sunny/development/bubbleteaGoogleMap/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sunny/development/bubbleteaGoogleMap/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sunny/development/bubbleteaGoogleMap/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sunny/development/bubbleteaGoogleMap/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sunny/development/bubbleteaGoogleMap/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _jsxFileName = \"/Users/sunny/development/bubbleteaGoogleMap/src/components/ClinicMap/ClinicMap.js\",\n    _this = this;\n\nimport React from 'react';\nimport * as parkData from \"../../data/pearllady-location.json\";\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow, Polyline } from \"react-google-maps\";\nimport { compose, withProps } from \"recompose\";\nvar MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyB3P3RbY7UksatT5DcJgFvYlciUsUtM1zw\",\n  loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }),\n  containerElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 23\n    }\n  }),\n  mapElement: /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  })\n}), withScriptjs, withGoogleMap)(function () {\n  return /*#__PURE__*/React.createElement(GoogleMap, {\n    defaultZoom: 8,\n    defaultCenter: {\n      lat: 35.689487,\n      lng: 139.691711\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, parkData.features.map(function (park) {\n    return /*#__PURE__*/React.createElement(Marker, {\n      key: park.properties.PARK_ID,\n      position: {\n        lat: park.geometry.coordinates[0],\n        lng: park.geometry.coordinates[1]\n      },\n      onClick: function onClick(e) {},\n      icon: {\n        url: \"/bubbletea.svg\" // scaledSize: new window.google.maps.Size(50, 50)\n\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    });\n  }));\n});\n\nvar ClinicMap = /*#__PURE__*/function (_React$Component) {\n  _inherits(ClinicMap, _React$Component);\n\n  function ClinicMap(props) {\n    var _this2;\n\n    _classCallCheck(this, ClinicMap);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ClinicMap).call(this, props));\n    _this2.state = {\n      counter: 0\n    }; // this.myFunction = this.myFunction.bind(this);\n\n    return _this2;\n  }\n\n  _createClass(ClinicMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"searchByPostcode\",\n    value: function searchByPostcode(postCode) {\n      var postal_code = require('japan-postal-code');\n\n      postal_code.get(postCode, function (address) {\n        console.log(address.prefecture); // => \"東京都\"\n\n        console.log(address.city); // => \"千代田区\"\n\n        console.log(address.area); // => \"千代田\"\n\n        console.log(address.street); // => \"\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: \"100vw\",\n          height: \"100vh\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 1\n        }\n      }, /*#__PURE__*/React.createElement(MyMapComponent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 1\n        }\n      })));\n    }\n  }]);\n\n  return ClinicMap;\n}(React.Component);\n\nexport { ClinicMap as default };","map":{"version":3,"sources":["/Users/sunny/development/bubbleteaGoogleMap/src/components/ClinicMap/ClinicMap.js"],"names":["React","parkData","withGoogleMap","withScriptjs","GoogleMap","Marker","InfoWindow","Polyline","compose","withProps","MyMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","lat","lng","features","map","park","properties","PARK_ID","geometry","coordinates","e","url","ClinicMap","props","state","counter","postCode","postal_code","require","get","address","console","log","prefecture","city","area","street","width","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as parkData from \"../../data/pearllady-location.json\";\nimport {\n    withGoogleMap,\n    withScriptjs,\n    GoogleMap,\n    Marker,\n    InfoWindow,\n    Polyline\n  } from \"react-google-maps\";\nimport { compose, withProps } from \"recompose\";\n\nconst MyMapComponent = compose(\n  withProps({\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyB3P3RbY7UksatT5DcJgFvYlciUsUtM1zw\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `100%` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n  }),\n  withScriptjs,\n  withGoogleMap\n)(() =>\n  <GoogleMap\n    defaultZoom={8}\n    defaultCenter={{ lat: 35.689487, lng: 139.691711 }}\n  >\n    {parkData.features.map(park => (\n          <Marker\n        key={park.properties.PARK_ID}\n        position={{\n          lat: park.geometry.coordinates[0],\n          lng: park.geometry.coordinates[1]\n        }}\n        onClick={(e) => {\n        \n        }}\n        icon={{\n          url: `/bubbletea.svg`\n          // scaledSize: new window.google.maps.Size(50, 50)\n        }}\n      />\n      ))}\n  </GoogleMap>\n)\n\nexport default class ClinicMap extends React.Component{\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      counter: 0\n    }\n    // this.myFunction = this.myFunction.bind(this);\n  }\n  componentDidMount() {\n\n  }\n searchByPostcode(postCode) {\n  var postal_code = require('japan-postal-code');\n  \n  postal_code.get(postCode, function(address) {\n    console.log(address.prefecture); // => \"東京都\"\n    console.log(address.city); // => \"千代田区\"\n    console.log(address.area); // => \"千代田\"\n    console.log(address.street); // => \"\"\n  });\n}\nrender(){\n  return(\n  <>\n    \n{/* \n    \n     {showInfo && (\n     <InfoWindow\n        onCloseClick={() => {\n          setShowInfo(false);\n        }}\n        position={{\n          lat: closestGongcha.geometry.coordinates[0],\n          lng: closestGongcha.geometry.coordinates[1]\n        }}\n      >\n        <div>\n          <h2>{closestGongcha.properties.NAME}</h2>\n          <p>density :{closestGongcha.properties.DENSITY}</p>\n          <p>popularity :{closestGongcha.properties.POPULARITY}</p>\n          <p>demographic :{closestGongcha.properties.DEMOGRAPHIC}</p>\n        </div>\n      </InfoWindow>\n   )}  */}\n     \n\n  \n<div style={{ width: \"100vw\", height: \"100vh\" }}>\n<MyMapComponent\n     \n      />\n</div>\n\n    {/* <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <MapWrapped\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=\n        AIzaSyB3P3RbY7UksatT5DcJgFvYlciUsUtM1zw`}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `100%` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n      />\n    </div> */}\n    </>\n  );\n}\n\n}\n"]},"metadata":{},"sourceType":"module"}