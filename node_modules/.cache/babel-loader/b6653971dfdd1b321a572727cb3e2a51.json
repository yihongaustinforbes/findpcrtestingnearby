{"ast":null,"code":"import _slicedToArray from \"/Users/sunny/work/pcrTestCenterMap/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sunny/work/pcrTestCenterMap/src/components/ClinicMap/ClinicMap.js\";\nimport React, { useState, useEffect } from 'react';\nimport { withGoogleMap, withScriptjs, GoogleMap, Marker, InfoWindow, Polyline } from \"react-google-maps\";\nimport { compose, withProps } from \"recompose\";\nimport mapStyles from \"../../mapStyles\";\nimport * as chiyotaData from \"../../data/chiyota-location.json\";\nimport * as chuotaData from \"../../data/chuo-location.json\";\nimport * as minatoData from \"../../data/minato-location.json\";\n\nfunction ClinicMap(props) {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showInfo = _useState2[0],\n      setShowInfo = _useState2[1];\n\n  var centerCoords = props.marker ? {\n    lat: props.marker.lat,\n    lng: props.marker.lng\n  } : {\n    lat: 35.68183047265577,\n    lng: 139.76724937831762\n  };\n  var MyMapComponent = compose(withProps({\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyB3P3RbY7UksatT5DcJgFvYlciUsUtM1zw\",\n    loadingElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 23\n      }\n    }),\n    containerElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }),\n    mapElement: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 19\n      }\n    })\n  }), withScriptjs, withGoogleMap)(function (props) {\n    return /*#__PURE__*/React.createElement(GoogleMap, {\n      defaultZoom: 15,\n      center: centerCoords,\n      defaultOptions: {\n        styles: mapStyles\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, chiyotaData.features.map(function (clinic) {\n      return /*#__PURE__*/React.createElement(Marker, {\n        key: clinic.NAME,\n        position: {\n          lat: Number(clinic.LOCATION.split(',')[0]),\n          lng: Number(clinic.LOCATION.split(',')[1])\n        },\n        icon: {\n          url: \"/health-clinic.png\",\n          scaledSize: new window.google.maps.Size(25, 25)\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      });\n    }), props.marker && /*#__PURE__*/React.createElement(Marker, {\n      position: {\n        lat: props.marker.lat,\n        lng: props.marker.lng\n      },\n      onClick: function onClick() {\n        setShowInfo(props.marker);\n      },\n      icon: {\n        url: \"/health-clinic.png\",\n        scaledSize: new window.google.maps.Size(50, 50)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }), showInfo && /*#__PURE__*/React.createElement(InfoWindow, {\n      onCloseClick: function onCloseClick() {\n        setShowInfo(false);\n      },\n      position: {\n        lat: props.marker.lat,\n        lng: props.marker.lng\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, \"NAME: \", props.markerInfo.NAME), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, \"ADDRESS :\", props.markerInfo.ADDRESS), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, \"HOURS :\", props.markerInfo.HOURS), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, \"PCR TEST :\", props.markerInfo.PCR), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, \"ANTI-BODY TEST :\", props.markerInfo.ANTIBODY))));\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(MyMapComponent, {\n    marker: props.marker,\n    markerInfo: props.markerInfo,\n    district: props.district,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 1\n    }\n  })));\n}\n\nexport default ClinicMap;","map":{"version":3,"sources":["/Users/sunny/work/pcrTestCenterMap/src/components/ClinicMap/ClinicMap.js"],"names":["React","useState","useEffect","withGoogleMap","withScriptjs","GoogleMap","Marker","InfoWindow","Polyline","compose","withProps","mapStyles","chiyotaData","chuotaData","minatoData","ClinicMap","props","showInfo","setShowInfo","centerCoords","marker","lat","lng","MyMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","styles","features","map","clinic","NAME","Number","LOCATION","split","url","scaledSize","window","google","maps","Size","markerInfo","ADDRESS","HOURS","PCR","ANTIBODY","width","district"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n    withGoogleMap,\n    withScriptjs,\n    GoogleMap,\n    Marker,\n    InfoWindow,\n    Polyline\n  } from \"react-google-maps\";\nimport { compose, withProps } from \"recompose\";\nimport mapStyles from \"../../mapStyles\";\nimport * as chiyotaData from \"../../data/chiyota-location.json\";\nimport * as chuotaData from \"../../data/chuo-location.json\";\nimport * as minatoData from \"../../data/minato-location.json\";\n\n\n\n\nfunction ClinicMap(props) {\n  const [showInfo , setShowInfo] = useState(false);\n  const centerCoords =props.marker?{lat: props.marker.lat, lng: props.marker.lng}: {lat: 35.68183047265577, lng:139.76724937831762};\n  const MyMapComponent = compose(\n    withProps({\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyB3P3RbY7UksatT5DcJgFvYlciUsUtM1zw\",\n      loadingElement: <div style={{ height: `100%` }} />,\n      containerElement: <div style={{ height: `100%` }} />,\n      mapElement: <div style={{ height: `100%` }} />,\n    }),\n    withScriptjs,\n    withGoogleMap\n  )((props) =>\n    \n    <GoogleMap\n      defaultZoom={15}\n      center={centerCoords}\n      defaultOptions={{ styles: mapStyles }}\n      \n    >\n\n      {/* map markers from specific group */}\n      {chiyotaData.features.map(clinic => (\n        <Marker\n          key={clinic.NAME}\n          position={{\n            lat: Number(clinic.LOCATION.split(',')[0]), lng: Number(clinic.LOCATION.split(',')[1])\n          }}\n         \n          icon={{\n            url: `/health-clinic.png`,\n            scaledSize: new window.google.maps.Size(25, 25)\n          }}\n        />\n      ))}\n           {props.marker && <Marker \n          position={{lat: props.marker.lat, lng: props.marker.lng}}\n          onClick={()=>{ setShowInfo(props.marker);}}\n          icon={{\n            url: `/health-clinic.png`,\n            scaledSize: new window.google.maps.Size(50, 50)\n          }}\n          />}\n\n     {showInfo && (\n     <InfoWindow\n        onCloseClick={() => {\n          setShowInfo(false);\n        }}\n        position={{lat: props.marker.lat, lng: props.marker.lng}}\n      >\n        <div>\n      <h2>NAME: {props.markerInfo.NAME}</h2>\n      <p>ADDRESS :{props.markerInfo.ADDRESS}</p>\n      <p>HOURS :{props.markerInfo.HOURS}</p>\n      <p>PCR TEST :{props.markerInfo.PCR}</p>\n      <p>ANTI-BODY TEST :{props.markerInfo.ANTIBODY}</p>\n        </div>\n      </InfoWindow>\n   )} \n    </GoogleMap>\n  )\n\n  return(\n  <>\n    \n\n    \n     \n\n  \n<div style={{ width: \"100vw\", height: \"100vh\" }}>\n<MyMapComponent marker={props.marker} markerInfo={props.markerInfo} district={props.district} />\n      \n</div>\n\n    {/* <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <MapWrapped\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=\n        AIzaSyB3P3RbY7UksatT5DcJgFvYlciUsUtM1zw`}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `100%` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n      />\n    </div> */}\n    </>\n  );\n}\nexport default ClinicMap\n\n"]},"metadata":{},"sourceType":"module"}